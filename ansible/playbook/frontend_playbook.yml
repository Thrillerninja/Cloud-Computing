# Configure Next.js App
- name: Configure Next.js App
  hosts: app
  vars_files:
    - ./passwords.yml
  tasks:
    - name: Ensure /app directory exists
      become: true
      file:
        path: /app
        state: directory
        mode: '0755'

    - name: Clone repository containing Next.js app
      become: true
      git:
        repo: 'https://github.com/Thrillerninja/Cloud-Computing.git'
        dest: /app
        version: main

    - name: Verify package.json exists
      stat:
        path: /app/geoip-frontend/package.json
      register: package_json

    - name: Fail if package.json is missing
      fail:
        msg: "The package.json file is missing in /app/geoip-frontend. Ensure the application code is deployed correctly."
      when: not package_json.stat.exists

    - name: Add NodeSource repository for Node.js 18.x
      become: true
      shell: curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      args:
        executable: /bin/bash

    - name: Install Node.js and npm
      become: true
      apt:
        update_cache: yes
        name:
          - nodejs
          - build-essential
          - postgresql-client
        state: present

    - name: Install dependencies
      become: true
      shell: |
        cd /app/geoip-frontend
        npm install
      args:
        executable: /bin/bash

    - name: Kill process using port 3000 if exists
      become: true
      shell: |
        pkill -f "node" || true
      args:
        executable: /bin/bash
      ignore_errors: true

    - name: Get DB VM private IP
      become: true
      shell: hostname -I | awk '{print $1}'
      register: db_private_ip
      delegate_to: "{{ groups['database'][0] }}"      

    - name: Configure app environment
      become: true
      copy:
        dest: /app/geoip-frontend/.env.local
        content: |
          DB_USER={{ DB_USER }}
          DB_HOST={{ db_private_ip.stdout | trim }}
          DB_NAME={{ DB_NAME }}
          DB_PASSWORD={{ DB_PASSWORD }}
          DB_PORT=5432
          MAXMIND_USER_ID={{ MAXMIND_USER_ID | default('') }}
          MAXMIND_LICENSE_KEY={{ MAXMIND_LICENSE_KEY | default('') }}
        mode: '0600'

    - name: Create file with VM instance ID
      become: true
      shell: hostname > /app/geoip-frontend/public/instance_id.txt
      args:
        executable: /bin/bash

    # Create a systemd service for the app
    - name: Create Next.js app service
      become: true
      copy:
        dest: /etc/systemd/system/nextjs-app.service
        content: |
          [Unit]
          Description=Next.js Application
          After=network.target

          [Service]
          Type=simple
          User=root
          WorkingDirectory=/app/geoip-frontend
          ExecStart=/usr/bin/npm run dev
          Restart=on-failure
          Environment=NODE_ENV=production
          EnvironmentFile=/app/geoip-frontend/.env.local

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
        
    - name: Enable and start Next.js service
      become: true
      systemd:
        name: nextjs-app
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: Wait for Next.js app to start
      wait_for:
        port: 3000
        host: 127.0.0.1
        delay: 10
        timeout: 60
