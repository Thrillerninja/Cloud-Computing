name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-nextjs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd geoip-frontend
          npm install

      - name: Run tests
        run: |
          cd geoip-frontend
          npm test

  terraform-apply:
    runs-on: ubuntu-latest
    needs: test-nextjs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Create keys directory
        run: mkdir -p keys

      - name: Create keys.tf file
        run: |
          cat <<EOF > keys/keys.tf
          output "subscription_id" {
            value = "${{ secrets.SUBSCRIPTION_ID }}"
          }

          output "client_id" {
            value = "${{ secrets.CLIENT_ID }}"
          }

          output "client_secret" {
            value = "${{ secrets.CLIENT_SECRET }}"
          }

          output "tenant_id" {
            value = "${{ secrets.TENANT_ID }}"
          }
          EOF

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform (first run)
        run: terraform apply -auto-approve

      - name: Apply Terraform (second run)
        run: terraform apply -auto-approve

  ansible-deploy:
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: pip install ansible

      - name: Set Ansible vault password
        run: echo "ANSIBLE_VAULT_PASSWORD=${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > .env

      - name: Run Ansible playbook
        env:
          ANSIBLE_VAULT_PASSWORD_FILE: .env
        run: ansible-playbook ansible/main_playbook.yml -i ansible/inventory --vault-password-file .env

  check-webpages:
    runs-on: ubuntu-latest
    needs: ansible-deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if webpages are reachable
        run: |
          urls=(
            "http://<db_public_ip>:5432"
            "http://<app_public_ip_1>:3000"
            "http://<app_public_ip_2>:3000"
            "http://<pgadmin_public_ip>:5050"
            "http://<loadbalancer_public_ip>:80"
            "http://<grafana_public_ip>:3000"
          )
          for url in "${urls[@]}"; do
            if ! curl -s --head --request GET "$url" | grep "200 OK" > /dev/null; then
              echo "Error: $url is not reachable"
              exit 1
            fi
          done